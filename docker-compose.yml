version: "3.8"

services:
  cassandra:
    image: cassandra:${CASSANDRA_CONTAINER_TAG}
    container_name: ${CASSANDRA_CONTAINER_NAME}
    ports:
      - "${CASSANDRA_PORT}:9042"
    env_file:
      - .env
    environment:
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME}
      - CASSANDRA_DC=${CASSANDRA_DC}
      - CASSANDRA_RACK=${CASSANDRA_RACK}
      - CASSANDRA_ENDPOINT_SNITCH=${CASSANDRA_ENDPOINT_SNITCH}
      - CASSANDRA_PASSWORD_SEEDER=${CASSANDRA_PASSWORD_SEEDER}
      - CASSANDRA_AUTHENTICATOR=${CASSANDRA_AUTHENTICATOR}
      - CASSANDRA_AUTHORIZER=${CASSANDRA_AUTHORIZER}
      - CASSANDRA_USER=${CASSANDRA_USER}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
    volumes:
      - vol_cassandra_data:/var/lib/cassandra
    networks:
      - app_shared_network
      
  mongo:
    image: mongo:${MONGO_CONTAINER_TAG}
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - vol_mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USUARIO}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_CREDENCIAL}
    networks:
      - app_shared_network
      
  db:
    image: postgres:${POSTGRES_CONTAINER_TAG}
    container_name: ${POSTGRES_CONTAINER_NAME}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - vol_postgres_data:/data/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USUARIO}
      POSTGRES_PASSWORD: ${POSTGRES_CREDENCIAL}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app_shared_network
  backend:
    build:
      context: ./backend
    container_name: backend_app
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - mongo
      - db
      - cassandra

  frontend:
    build:
      context: ./frontend
    container_name: frontend_app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always

volumes:
  vol_mongo_data: 
  vol_postgres_data:
  vol_cassandra_data:

networks:
  app_shared_network: